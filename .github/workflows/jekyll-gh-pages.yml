# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
#permissions:
 # contents: read
 # pages: write
  #id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job 
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
     
      - name: Install dependencies
        run: |
          export PATH=$PATH:/home/runner/.local/share/gem/ruby/3.0.0/bin
          echo $PATH
          echo "Running bundle install with verbose output..."    
          sudo gem install jekyll bundler
          bundle config set path 'vendor/bundle'      
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./site
     
#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
   
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Set up Git
        run: |
          git config --global user.email "rw-martin@users.noreply.github.com"
          git config --global user.name "rw-martin"

      - name: Switch to gh-pages branch
        run: |
          git fetch
          git checkout gh-pages || git checkout --orphan gh-pages
          git rm -rf .  # Clean the working directory

      - name: Copy Jekyll site files to gh-pages
        run: cp -R /github/workspace/./site/* .

      - name: Commit and Push Changes
        run: |
          git add .
          git commit -m "Deploy Jekyll site to GitHub Pages"
          git push origin gh-pages --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}